{"version":3,"sources":["redux/actions.js","components/CreatePost.js","components/Post.js","components/PostList.js","redux/reducer.js","redux/store.js","App.js","index.js"],"names":["ADD_POST","AUTHORS","author","avatar","nickname","CreatePost","useState","setAuthor","content","setContent","photo","setPhoto","dispatch","useDispatch","onCreatePost","event","preventDefault","post","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","currentDate","selectedAuthor","find","item","countLikes","countComents","countReposts","type","payload","className","onSubmit","onChange","e","target","value","map","index","placeholder","onClick","Post","style","backgroundColor","width","height","color","marginBottom","borderRadius","display","margin","src","alt","flexDirection","marginTop","fontSize","fontWeight","paddingLeft","justifyContent","IconButton","PostList","posts","useSelector","state","initialState","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAaA,EAAW,W,OCIlBC,EAAU,CACd,CACEC,OAAQ,2BACRC,OAAQ,0FACRC,SAAU,kCAGZ,CACEF,OAAQ,2BACRC,OAAQ,uEACRC,SAAU,UAGZ,CACEF,OAAQ,2BACRC,OAAQ,kNACRC,SAAU,UAIC,SAASC,IAAc,IAAD,EACPC,mBAAS,4BADF,mBAC5BJ,EAD4B,KACpBK,EADoB,OAELD,mBAAS,IAFJ,mBAE5BE,EAF4B,KAEnBC,EAFmB,OAGTH,mBAAS,IAHA,mBAG5BI,EAH4B,KAGrBC,EAHqB,KAc7BC,EAAWC,cAEXC,EAAe,SAACC,GACpBA,EAAMC,iBACN,IDxCoBC,ECwCdC,EAbY,WAClB,IAAIA,EAAO,IAAIC,KACXC,EAAKC,OAAOH,EAAKI,WAAWC,SAAS,EAAG,KACxCC,EAAKH,OAAOH,EAAKO,WAAa,GAAGF,SAAS,EAAG,KAC7CG,EAAOR,EAAKS,cAEhB,OADOP,EAAK,IAAMI,EAAK,IAAME,EAQhBE,GAEPC,EAAiB5B,EAAQ6B,MAAK,SAACC,GAAD,OAAUA,EAAK7B,SAAWA,KAC9DU,GD3CoBK,EC2CH,CAAEf,OAAQ2B,EAAe3B,OAAQC,OAAQ0B,EAAe1B,OAAQC,SAAUyB,EAAezB,SAAUc,OAAMV,UAASE,QAAOsB,WAFvH,EAEmIC,aAFjH,EAE+HC,aAF7G,GDzCzB,CAC9BC,KAAMnC,EACNoC,QAASnB,KC0CTV,EAAU,4BACVE,EAAW,IACXE,EAAS,KAGX,OACE,uBAAM0B,UAAU,WAAWC,SAAUxB,EAArC,UACE,wBAAQyB,SAAU,SAACC,GAAD,OAAOjC,EAAUiC,EAAEC,OAAOC,QAA5C,SACGzC,EAAQ0C,KAAI,SAACZ,EAAMa,GAAP,OACX,wBAAQF,MAAOX,EAAK7B,OAApB,SAAyC6B,EAAK7B,QAAb0C,QAIrC,uBACET,KAAK,OACLU,YAAY,UACZH,MAAOlC,EACP+B,SAAU,SAACC,GAAD,OAAO/B,EAAW+B,EAAEC,OAAOC,UAGvC,uBACEP,KAAK,OACLU,YAAY,QACZH,MAAOhC,EACP6B,SAAU,SAACC,GAAD,OAAO7B,EAAS6B,EAAEC,OAAOC,UAGrC,wBAAQP,KAAK,SAASW,QAAShC,EAA/B,uB,gFC4BSiC,EA/FF,SAAC,GAAgG,IAA9F7C,EAA6F,EAA7FA,OAAQC,EAAqF,EAArFA,OAAQC,EAA6E,EAA7EA,SAAUc,EAAmE,EAAnEA,KAAMV,EAA6D,EAA7DA,QAASE,EAAoD,EAApDA,MAAOsB,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAkDzF,OACC,sBAAKc,MAlDW,CAChBC,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,OACRC,MAAO,QACPC,aAAc,OACdC,aAAc,QA4Cd,UACC,sBAAKN,MA1CW,CACjBO,QAAS,QAyCR,UACC,qBAAKP,MAhCW,CAClBM,aAAc,MACdE,OAAQ,cACRN,MAAO,OACPC,OAAQ,QA4BkBM,IAAKtD,EAAQuD,IAAI,KACzC,sBAAKV,MAfY,CACnBO,QAAS,OACTI,cAAe,SACfC,UAAW,QAYT,UAEC,gCACC,sBAAMZ,MA3CO,CACjBI,MAAO,QACPS,SAAU,OACVC,WAAY,QAwCR,SAAyB5D,IACzB,uBAAM8C,MA9BW,CACrBI,MAAO,UACPW,YAAa,QA4BT,UAA6B3D,EAA7B,SAAiDc,QAGlD,8BACC,+BAAOV,YAOV,qBAAKwC,MApCY,CAClBE,MAAO,QACPI,aAAc,OACdE,OAAQ,wBAiCiBC,IAAK/C,EAAOgD,IAAI,KACxC,sBAAKV,MAzBe,CACrBO,QAAS,OACTS,eAAgB,gBAuBf,UACC,eAACC,EAAA,EAAD,CAAYb,MAAM,UAAlB,UACC,cAAC,IAAD,IACCnB,KAGF,eAACgC,EAAA,EAAD,CAAYb,MAAM,UAAlB,UACC,cAAC,IAAD,IACClB,KAGF,eAAC+B,EAAA,EAAD,CAAYb,MAAM,UAAlB,UACC,cAAC,IAAD,IACCpB,KAGF,cAACiC,EAAA,EAAD,CAAYb,MAAM,UAAlB,SACC,cAAC,IAAD,aCzFU,SAASc,IACtB,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAE3C,OACE,sBAAK9B,UAAU,gBAAf,UACE,cAAChC,EAAD,IACA,qBAAKgC,UAAU,aAAf,SACG8B,EAAMxB,KAAI,SAAC1B,EAAM2B,GAAP,OACT,cAAC,EAAD,eAAsB3B,GAAX2B,W,oBC2Bf0B,EAAe,CACjBH,MAtCU,CACV,CACIjE,OAAQ,2BACRC,OAAQ,0FACRC,SAAU,iCACVc,KAAM,aACNV,QAAS,mHACTE,MAAO,qDACPsB,WAAY,EACZC,aAAc,EACdC,aAAc,GAElB,CACIhC,OAAQ,2BACRC,OAAQ,uEACRC,SAAU,SACVc,KAAM,aACNV,QAAS,wKACTE,MAAO,wEACPsB,WAAY,EACZC,aAAc,EACdC,aAAc,GAElB,CACIhC,OAAQ,2BACRC,OAAQ,kNACRC,SAAU,QACVc,KAAM,aACNV,QAAS,qGACTE,MAAO,0EACPsB,WAAY,EACZC,aAAc,EACdC,aAAc,KC/BTqC,EAAQC,aDwCE,WAAmC,IAAlCH,EAAiC,uDAAzBC,EAAcG,EAAW,uCACrD,OAAQA,EAAOtC,MACX,KAAKnC,EAED,MAAO,CACHmE,MAAM,GAAD,mBAAME,EAAMF,OAAZ,CAAmBM,EAAOrC,WAEvC,QACI,OAAOiC,KC9CfK,OAAOC,8BAAgCD,OAAOC,gCCUnCC,MAXf,WACE,OACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,sBAAKlC,UAAU,MAAf,UACE,qGACA,cAAC6B,EAAD,UCJRW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.013493f9.chunk.js","sourcesContent":["export const ADD_POST = 'ADD_POST';\n\nexport const addPost = (post) => ({\n    type: ADD_POST,\n    payload: post,\n});","import { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { addPost } from '../redux/actions';\n\nconst AUTHORS = [\n  {\n    author: \"Коля\",\n    avatar: \"https://lurkmore.so/images/thumb/9/93/Severniy-chelovek.jpg/473px-Severniy-chelovek.jpg\",\n    nickname: \"Шаман\",\n  },\n\n  {\n    author: \"Петя\",\n    avatar: \"https://s.fraza.com/images/2018/07/27/110739_6457567657567.thumb.jpg\",\n    nickname: \"Arnold\",\n  },\n\n  {\n    author: \"Вася\",\n    avatar: \"https://1.bp.blogspot.com/-x5WQ37tfaCg/W9f6GvUmOtI/AAAAAAABGzc/18S0PanTN5IqQ4iae3gBKlZ3lJJcLxlegCLcBGAs/s1600/%25D1%2588%25D0%25B0%25D0%25BC%25D0%25B0%25D0%25BD%2B%25D0%25BA%25D0%25BE%25D0%25BB%25D1%258F.jpg\",\n    nickname: \"Rembo\",\n  }\n]\n\nexport default function CreatePost() {\n  const [author, setAuthor] = useState(\"Коля\");\n  const [content, setContent] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n\n  const currentDate = () => {\n    let date = new Date();\n    let dd = String(date.getDate()).padStart(2, '0');\n    let mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = date.getFullYear();\n    date = dd + '.' + mm + '.' + yyyy;\n    return date;\n  }\n\n  const dispatch = useDispatch();\n\n  const onCreatePost = (event) => {\n    event.preventDefault();\n    const date = currentDate();\n    const countLikes = 0, countComents = 0, countReposts = 0;\n    const selectedAuthor = AUTHORS.find((item) => item.author === author);\n    dispatch(addPost({ author: selectedAuthor.author, avatar: selectedAuthor.avatar, nickname: selectedAuthor.nickname, date, content, photo, countLikes, countComents, countReposts }));\n    setAuthor(\"Коля\");\n    setContent(\"\");\n    setPhoto(\"\");\n  };\n\n  return (\n    <form className=\"post-new\" onSubmit={onCreatePost}>\n      <select onChange={(e) => setAuthor(e.target.value)}>\n        {AUTHORS.map((item, index) => (\n          <option value={item.author} key={index}>{item.author}</option>\n        ))}\n      </select>\n\n      <input\n        type=\"text\"\n        placeholder=\"Content\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n      />\n\n      <input\n        type=\"text\"\n        placeholder=\"Photo\"\n        value={photo}\n        onChange={(e) => setPhoto(e.target.value)}\n      />\n\n      <button type=\"submit\" onClick={onCreatePost}>\n        Create\n      </button>\n    </form>\n  );\n}\n","import IconButton from '@mui/material/IconButton';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\n\r\nconst Post = ({ author, avatar, nickname, date, content, photo, countLikes, countComents, countReposts }) => {\r\n\tconst divStyle = {\r\n\t\tbackgroundColor: \"#0d1a27\",\r\n\t\twidth: \"750px\",\r\n\t\theight: \"auto\",\r\n\t\tcolor: \"white\",\r\n\t\tmarginBottom: \"20px\",\r\n\t\tborderRadius: \"20px\",\r\n\t};\r\n\r\n\tconst infoStyle = {\r\n\t\tdisplay: 'flex',\r\n\t}\r\n\r\n\tconst nameStyle = {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: \"20px\",\r\n\t\tfontWeight: \"bold\",\r\n\r\n\t};\r\n\r\n\tconst photoStyle = {\r\n\t\tborderRadius: \"50%\",\r\n\t\tmargin: \"20px 20px 0\",\r\n\t\twidth: \"70px\",\r\n\t\theight: \"70px\",\r\n\t};\r\n\r\n\tconst nicknameStyle = {\r\n\t\tcolor: \"#667683\",\r\n\t\tpaddingLeft: \"10px\",\r\n\t};\r\n\r\n\tconst imageStyle = {\r\n\t\twidth: \"600px\",\r\n\t\tborderRadius: \"20px\",\r\n\t\tmargin: \"10px 20px 20px 110px\",\r\n\t};\r\n\r\n\tconst styleColumn = {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tmarginTop: \"20px\",\r\n\t};\r\n\r\n\tconst countersStyle = {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"space-around\",\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={divStyle}>\r\n\t\t\t<div style={infoStyle}>\r\n\t\t\t\t<img style={photoStyle} src={avatar} alt=\"\" />\r\n\t\t\t\t<div style={styleColumn}>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span style={nameStyle}>{author}</span>\r\n\t\t\t\t\t\t<span style={nicknameStyle}>{nickname} &middot; {date}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>{content}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<img style={imageStyle} src={photo} alt=\"\" />\r\n\t\t\t<div style={countersStyle}>\r\n\t\t\t\t<IconButton color=\"primary\">\r\n\t\t\t\t\t<ChatIcon />\r\n\t\t\t\t\t{countComents}\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<IconButton color=\"primary\">\r\n\t\t\t\t\t<AutorenewIcon />\r\n\t\t\t\t\t{countReposts}\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<IconButton color=\"primary\">\r\n\t\t\t\t\t<FavoriteIcon />\r\n\t\t\t\t\t{countLikes}\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<IconButton color=\"primary\">\r\n\t\t\t\t\t<UploadIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Post;","import { useSelector } from \"react-redux\";\nimport CreatePost from \"./CreatePost\";\nimport Post from \"./Post\";\n\nexport default function PostList() {\n  const posts = useSelector((state) => state.posts);\n\n  return (\n    <div className=\"posts-wrapper\">\n      <CreatePost />\n      <div className=\"posts-list\">\n        {posts.map((post, index) => (\n          <Post key={index} {...post} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { ADD_POST } from \"./actions\";\n\nconst POSTS = [\n    {\n        author: \"Коля\",\n        avatar: \"https://lurkmore.so/images/thumb/9/93/Severniy-chelovek.jpg/473px-Severniy-chelovek.jpg\",\n        nickname: \"Шаман\",\n        date: \"07.12.2021\",\n        content: \"Полный вперед, однако!\",\n        photo: \"https://lurkmore.so/images/5/50/Chukchanalodke.jpg\",\n        countLikes: 1,\n        countComents: 2,\n        countReposts: 3,\n    },\n    {\n        author: \"Петя\",\n        avatar: \"https://s.fraza.com/images/2018/07/27/110739_6457567657567.thumb.jpg\",\n        nickname: \"Arnold\",\n        date: \"07.12.2021\",\n        content: \"Спят твои соседи...белые медведи...\",\n        photo: \"https://cs13.pikabu.ru/post_img/2021/01/25/6/1611567522123238962.webp\",\n        countLikes: 1,\n        countComents: 2,\n        countReposts: 3,\n    },\n    {\n        author: \"Вася\",\n        avatar: \"https://1.bp.blogspot.com/-x5WQ37tfaCg/W9f6GvUmOtI/AAAAAAABGzc/18S0PanTN5IqQ4iae3gBKlZ3lJJcLxlegCLcBGAs/s1600/%25D1%2588%25D0%25B0%25D0%25BC%25D0%25B0%25D0%25BD%2B%25D0%25BA%25D0%25BE%25D0%25BB%25D1%258F.jpg\",\n        nickname: \"Rembo\",\n        date: \"07.12.2021\",\n        content: \"Опять понедельник(\",\n        photo: \"https://www.meme-arsenal.com/memes/1823387b0e6cae381c5566db5552df4d.jpg\",\n        countLikes: 1,\n        countComents: 2,\n        countReposts: 3,\n    },\n\n];\n\nconst initialState = {\n    posts: POSTS,\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n\n            return {\n                posts: [...state.posts, action.payload],\n            }\n        default:\n            return state;\n    }\n};","import { createStore } from 'redux';\nimport { reducer } from './reducer';\n\nexport const store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","import PostList from './components/PostList';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <h1>Будни чукчей</h1>\n        <PostList />\n      </div>\n    </Provider> \n  ); \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}